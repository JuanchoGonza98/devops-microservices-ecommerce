# ==========================================
# ? SERVER CONFIGURATION
# ==========================================
server.port=8082
spring.application.name=payment-service

# ==========================================
# ? MICROSERVICES ENDPOINTS (Docker network)
# ==========================================
ORDERS_API_URL=http://orders-service:8083

# ==========================================
# ? LOGGING CONFIGURATION
# ==========================================
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.com.ecommerce.paymentservice=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# ==========================================
# ? TIMEOUTS & HTTP CLIENT
# ==========================================
# (para evitar cuelgues si el orders-service no responde)
spring.mvc.async.request-timeout=5000
spring.main.web-application-type=servlet

# ==========================================
# ? ACTUATOR (optional para healthcheck)
# ==========================================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.server.port=8089

# ==========================================
# ? JSON CONFIG (para serialización limpia)
# ==========================================
spring.jackson.serialization.indent_output=true
